{"ast":null,"code":"var _jsxFileName = \"/Users/pratibha/Documents/Brainstation/brainflix/sprint-two/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport logo from \"./assets/logos/Logo-brainflix.svg\";\nimport search from \"./assets/icons/Icon-search.svg\";\nimport upload from \"./assets/icons/Icon-upload.svg\";\nimport user from \"./assets/images/Mohan-muruge.jpg\";\nimport avatar from \"./assets/images/User-image.png\";\nimport views from \"./assets/icons/Icon-views.svg\";\nimport likes from \"./assets/icons/Icon-likes.svg\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport CommentsList from \"./components/CommentsList\";\nimport VideoList from \"./components/VideoList\";\nimport Test from \"./components/Test\";\nimport Button from \"./components/Button\"; //import video data to use in state object\n// import videoDetailsData from \"./data/video-details.json\";\n// import videosData from \"./data/videos.json\";\n\nimport VideoDetails from \"./components/VideoDetails\";\nimport CommentForm from \"./components/CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = \"https://project-2-api.herokuapp.com\";\nconst apiKey = \"e2a28022-e948-4ff4-a990-33dd5ab61d89\";\nconst apiURL1 = \"https://project-2-api.herokuapp.com/videos\";\nconst apiKey1 = \"e2a28022-e948-4ff4-a990-33dd5ab61d89\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nowPlayingID: \"1af0jruup5gu\",\n      nowPlayingIndex: 0,\n      videos: [],\n      videoDetails: {\n        comments: []\n      }\n    };\n\n    this.getVideosData = () => {\n      axios // .get('https://project-2-api.herokuapp.com/videos?api_key=66840eb8-8aca-46f7-be41-b5b4b62bbc41')\n      .get(`${apiURL}/videos?api_key=${apiKey}`).then(response => {\n        console.log(response);\n        this.setState({\n          videos: response.data\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.getVideosDetailsData = id => {\n      axios // .get(`${apiURL1}/${id}?api_key=${apiKey1}`)\n      .get(`https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=e2a28022-e948-4ff4-a990-33dd5ab61d89`) // .get(`${apiURL}/videos/${id}?api_key=${apiKey}`)\n      .then(response => {\n        console.log(\"user object from api\", response.data);\n        this.setState({\n          videoDetails: response.data\n        });\n      }).catch(error => console.log(\"couldnt load on time\", error));\n    };\n\n    this.setNowPlayingVideo = id => {\n      const foundIndex = this.state.videos.findIndex(video => video.id === id); // set current video to the id from videoList click event and also set the index of the current video\n\n      this.setState({\n        nowPlayingID: id,\n        nowPlayingIndex: foundIndex\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getVideosData();\n    this.getVideosDetailsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"comp updated\", this.props);\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id !== undefined && prevState.videoDetails.id !== Number(id)) {\n      this.getVideosDetailsData(id);\n    }\n  }\n\n  render() {\n    const {\n      videos,\n      videoDetails,\n      nowPlayingID\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        logo: logo,\n        search: search,\n        upload: upload,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n        posterImage: videoDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"upload__title\",\n          children: \"Upload Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"upload__form\",\n          className: \"upload__form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload__formgroups\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload__formgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"videoname\",\n                class: \"upload__formlabel\",\n                children: \"TITLE YOUR VIDEO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"videoname\",\n                class: \"upload__input\",\n                name: \"video_title\",\n                placeholder: \"Add a title to your video\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"comment\",\n                className: \"upload__textarea\",\n                name: \"video_description\",\n                placeholder: \"Add a description of your video\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"PUBLISH\",\n              className: \"upload__formsubmit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"CANCEL\",\n              className: \"upload__formsubmit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pratibha/Documents/Brainstation/brainflix/sprint-two/src/App.jsx"],"names":["React","Component","axios","user","avatar","Header","VideoPlayer","CommentsList","VideoList","Test","Button","VideoDetails","CommentForm","apiURL","apiKey","apiURL1","apiKey1","App","state","nowPlayingID","nowPlayingIndex","videos","videoDetails","comments","getVideosData","get","then","response","console","log","setState","data","catch","error","getVideosDetailsData","id","setNowPlayingVideo","foundIndex","findIndex","video","componentDidMount","componentDidUpdate","prevProps","prevState","props","match","params","undefined","Number","render","logo","search","upload"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport logo from \"./assets/logos/Logo-brainflix.svg\";\nimport search from \"./assets/icons/Icon-search.svg\";\nimport upload from \"./assets/icons/Icon-upload.svg\";\nimport user from \"./assets/images/Mohan-muruge.jpg\";\nimport avatar from \"./assets/images/User-image.png\";\nimport views from \"./assets/icons/Icon-views.svg\";\nimport likes from \"./assets/icons/Icon-likes.svg\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport CommentsList from \"./components/CommentsList\";\nimport VideoList from \"./components/VideoList\";\nimport Test from \"./components/Test\";\nimport Button from \"./components/Button\";\n\n\n//import video data to use in state object\n// import videoDetailsData from \"./data/video-details.json\";\n// import videosData from \"./data/videos.json\";\nimport VideoDetails from \"./components/VideoDetails\";\nimport CommentForm from \"./components/CommentForm\";\n\nconst apiURL = \"https://project-2-api.herokuapp.com\";\nconst apiKey =  \"e2a28022-e948-4ff4-a990-33dd5ab61d89\";\n\nconst apiURL1 = \"https://project-2-api.herokuapp.com/videos\";\nconst apiKey1 =  \"e2a28022-e948-4ff4-a990-33dd5ab61d89\";\n\nclass App extends Component{\n  //state object\n  state = {\n    nowPlayingID: \"1af0jruup5gu\",\n    nowPlayingIndex: 0,\n    videos: [],\n    videoDetails:{\n      comments:[]\n    }\n      \n  }\n\n  componentDidMount(){\n    this.getVideosData();\n    this.getVideosDetailsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"comp updated\", this.props);\n    const { id } = this.props.match.params; \n    if (id !== undefined && prevState.videoDetails.id !== Number(id)) {\n      this.getVideosDetailsData(id);\n    }\n  }\n\n\n  getVideosData = ()=>{\n    axios\n    // .get('https://project-2-api.herokuapp.com/videos?api_key=66840eb8-8aca-46f7-be41-b5b4b62bbc41')\n      .get(`${apiURL}/videos?api_key=${apiKey}`)\n      .then((response)=>{\n        console.log(response);\n        this.setState({\n          videos: response.data,\n        });\n      })\n      .catch((error)=>console.log(error));\n  };\n\n  getVideosDetailsData = (id)=>{\n    axios\n      // .get(`${apiURL1}/${id}?api_key=${apiKey1}`)\n      .get(`https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=e2a28022-e948-4ff4-a990-33dd5ab61d89`)\n      // .get(`${apiURL}/videos/${id}?api_key=${apiKey}`)\n      .then((response)=>{\n        console.log(\"user object from api\",response.data);\n        this.setState({\n          videoDetails: response.data,\n        });\n      })\n      .catch((error)=>console.log(\"couldnt load on time\",error));\n  };\n\n  setNowPlayingVideo = (id) => {\n    const foundIndex = this.state.videos.findIndex((video) => video.id === id);\n    // set current video to the id from videoList click event and also set the index of the current video\n    this.setState({\n      nowPlayingID: id,\n      nowPlayingIndex: foundIndex,\n    });\n  };\n\n  render() {\n    const {videos, videoDetails, nowPlayingID} = this.state;\n    return (\n      <div className=\"App\">\n        <Header logo={logo} search={search} upload={upload} user={user}/>\n        {/* <VideoPlayer posterImage={this.state.videoDetails[this.state.nowPlayingIndex]} />  */}\n        <VideoPlayer posterImage={videoDetails} />      \n        {/* <VideoPlayer posterImage={this.state.videoDetails[0].image} />      */}\n        \n        {/* <Test \n        // userData={this.state.videoDetails} \n        // currentVideoID={this.state.nowPlayingID}\n        // setNowPlayingVideo={this.setNowPlayingVideo}\n        views={views} \n        likes={likes} \n        videoDetailsData={this.state.videoDetails}\n        // CommentListDetails={this.state.videoDetails}\n        /> */}\n        \n\n        {/* <main className=\"main-section\">\n          <div className=\"main-section__left\">\n            <VideoDetails \n            views={views} \n            likes={likes} \n            videoDetailsData={videoDetails}/>\n\n            <CommentForm user={user} videoDetailsData={videoDetails}/>\n\n            <CommentsList\n            avatar={avatar}\n            videoDetailsData={this.state.videoDetails}/>\n          </div>\n\n          <aside className=\"main-section__right\">\n            <VideoList\n            videos={videos}\n            currentVideoID={nowPlayingID}\n            setNowPlayingVideo={this.setNowPlayingVideo}/>\n          </aside>           \n        </main>   */}\n        <section className=\"upload\">\n        <h1 className=\"upload__title\">Upload Video</h1>\n        <form id= \"upload__form\" className=\"upload__form\">\n                    <div className=\"upload__formgroups\">\n                        <div className=\"upload__formgroup\">\n                            <label htmlFor=\"videoname\" class=\"upload__formlabel\">TITLE YOUR VIDEO</label>\n                            <input type=\"text\" id=\"videoname\" class=\"upload__input\" name=\"video_title\" placeholder=\"Add a title to your video\" required/>\n                        \n                            <textarea id=\"comment\" className=\"upload__textarea\" name=\"video_description\" placeholder=\"Add a description of your video\" required></textarea>\n                        </div> \n                        <Button text=\"PUBLISH\" className=\"upload__formsubmit\" />\n                        <Button text=\"CANCEL\" className=\"upload__formsubmit\" />\n\n                    </div>\n                    </form>\n\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
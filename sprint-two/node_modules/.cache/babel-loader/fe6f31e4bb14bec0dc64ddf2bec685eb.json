{"ast":null,"code":"var _jsxFileName = \"/Users/pratibha/Documents/Brainstation/brainflix/sprint-two/src/components/Upload.jsx\";\nimport React from \"react\"; // import Header from \"./Header\";\n\nimport Button from \"./Button\"; // import logo from \"../assets/logos/Logo-brainflix.svg\";\n// import search from \"../assets/icons/Icon-search.svg\";\n// import upload from \"../assets/icons/Icon-upload.svg\";\n// import user from \"../assets/images/Mohan-muruge.jpg\";\n\nimport videotpreview from \"../assets/images/Upload-video-preview.jpg\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Upload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video_title: \"\",\n      video_description: \"\"\n    };\n\n    this.upload = () => {\n      this.setState({\n        someKey: \"someValue\"\n      }, () => {\n        console.log(this.state.someKey);\n      });\n      console.log(this.state.someKey);\n    };\n\n    this.updateTitle = event => {\n      this.setState({\n        video_title: event.target.value\n      });\n    };\n\n    this.updateDescription = event => {\n      this.setState({\n        video_description: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      alert(\"Video is uploaded\");\n      event.preventDefault(); // console.log(event.target)\n      // console.log(this.state.video_description)\n    };\n\n    this.handleClick = () => {\n      alert(\"i am working now!\");\n    };\n  }\n\n  componentDidMount() {\n    this.upload();\n  }\n\n  // handleClick = () => {\n  //     // alert(\"Uploaded Thanks\");\n  //     // console.log(\"Success\");\n  //     if (!this.state.video_title) {\n  //     alert(\"Video title can not be empty.\");\n  //     return;\n  //     }\n  //     if (!this.state.video_description) {\n  //         alert(\"Video description can not be empty.\");\n  //         return;\n  //         }\n  //     if (!this.state.video_title && !this.state.video_description) {\n  //     alert(\"Video Uploaded Successfully!\");\n  //     return;\n  //     }\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"upload__topdivider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"upload__title\",\n          children: \"Upload Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"upload__divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"upload__form\",\n          className: \"upload__form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload__formgroups\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload_imagegroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"videothumnail\",\n                className: \"upload__formlabel\",\n                children: \"VIDEO THUMBNAIL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"upload__image\",\n                src: videotpreview,\n                alt: \"videothumbnail image of upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload__formgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"videotitle\",\n                className: \"upload__formlabel\",\n                children: \"TITLE YOUR VIDEO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"videoname\",\n                className: \"upload__input\",\n                name: \"video_title\",\n                placeholder: \"Add a title to your video\",\n                onChange: this.updateTitle,\n                value: this.state.video_title,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"videodescription\",\n                className: \"upload__formlabel\",\n                children: \"ADD A VIDEO DESCRIPTION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"upload\",\n                className: \"upload__textarea\",\n                name: \"video_description\",\n                placeholder: \"Add a description of your video\",\n                onChange: this.updateDescription,\n                value: this.state.video_Description,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"upload__divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload__buttongroup\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                text: \"PUBLISH\",\n                className: \"upload__submitpublish\",\n                onClick: this.handleClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                text: \"CANCEL\",\n                className: \"upload__submitcancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/pratibha/Documents/Brainstation/brainflix/sprint-two/src/components/Upload.jsx"],"names":["React","Button","videotpreview","Link","Upload","Component","state","video_title","video_description","upload","setState","someKey","console","log","updateTitle","event","target","value","updateDescription","handleSubmit","alert","preventDefault","handleClick","componentDidMount","render","video_Description"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import Header from \"./Header\";\nimport Button from \"./Button\";\n// import logo from \"../assets/logos/Logo-brainflix.svg\";\n// import search from \"../assets/icons/Icon-search.svg\";\n// import upload from \"../assets/icons/Icon-upload.svg\";\n// import user from \"../assets/images/Mohan-muruge.jpg\";\nimport videotpreview from \"../assets/images/Upload-video-preview.jpg\";\nimport { Link } from 'react-router-dom';\n\n\nclass Upload extends React.Component {\n    state={\n        video_title: \"\",\n        video_description: \"\",\n    };\n\n    componentDidMount(){\n        this.upload();\n    }\n\n    upload = () => {\n        this.setState(\n            {\n                someKey: \"someValue\",\n            },\n            () => {\n                console.log(this.state.someKey);\n            }\n        );\n        console.log(this.state.someKey);\n    };\n\n\n    updateTitle = (event) =>{\n        this.setState({\n            video_title: event.target.value,\n        });\n    };\n\n    updateDescription = (event) =>{\n        this.setState({\n            video_description: event.target.value,\n        });\n    };\n\n    handleSubmit = (event) => {\n        alert(\"Video is uploaded\");\n        event.preventDefault();\n        // console.log(event.target)\n        // console.log(this.state.video_description)\n    }\n\n        handleClick =()=> {\n            alert(\"i am working now!\");\n        }\n    // handleClick = () => {\n    //     // alert(\"Uploaded Thanks\");\n    //     // console.log(\"Success\");\n    //     if (!this.state.video_title) {\n    //     alert(\"Video title can not be empty.\");\n    //     return;\n    //     }\n\n    //     if (!this.state.video_description) {\n    //         alert(\"Video description can not be empty.\");\n    //         return;\n    //         }\n    \n    //     if (!this.state.video_title && !this.state.video_description) {\n    //     alert(\"Video Uploaded Successfully!\");\n    //     return;\n    //     }\n    // };\n\n    render(){\n        return (\n            <div>\n            {/* <Header logo={logo} search={search} upload={upload} user={user}/>     */}\n            <hr className=\"upload__topdivider\"/>\n            <section className=\"upload\">\n                <h1 className=\"upload__title\">Upload Video</h1>\n                <hr className=\"upload__divider\"/>\n                <form id= \"upload__form\" className=\"upload__form\" onSubmit={this.handleSubmit}>\n                    <div className=\"upload__formgroups\">\n                    <div className=\"upload_imagegroup\">\n                    <label htmlFor=\"videothumnail\" className=\"upload__formlabel\">VIDEO THUMBNAIL</label>\n                    <img className=\"upload__image\" src={videotpreview} alt=\"videothumbnail image of upload\"/>\n                    </div>\n                    <div className=\"upload__formgroup\">\n                        <label htmlFor=\"videotitle\" className=\"upload__formlabel\">TITLE YOUR VIDEO</label>\n                        <input type=\"text\" id=\"videoname\" className=\"upload__input\" name=\"video_title\" placeholder=\"Add a title to your video\" onChange={this.updateTitle}  value= {this.state.video_title} required/>\n\n                        <label htmlFor=\"videodescription\" className=\"upload__formlabel\">ADD A VIDEO DESCRIPTION</label>\n                        <textarea id=\"upload\" className=\"upload__textarea\" name=\"video_description\" placeholder=\"Add a description of your video\" onChange={this.updateDescription}  value= {this.state.video_Description} required></textarea>\n                    </div> \n                    </div>\n                    <hr className=\"upload__divider\"/>\n                    <div className=\"upload__buttongroup\">\n                        <Link to={`/`}>\n                        <Button type=\"button\" text=\"PUBLISH\" className=\"upload__submitpublish\" onClick={this.handleClick}/>\n                        </Link>\n                        <Link to={`/`}>\n                            <Button text=\"CANCEL\" className=\"upload__submitcancel\"/>\n                        </Link>\n                    </div>\n                    \n                    </form>\n            </section>\n                \n            </div>\n        )\n    }\n\n}\nexport default Upload\n"]},"metadata":{},"sourceType":"module"}